{"level":"error","message":{"message":"\nInvalid `prisma.receipts.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\receipt\\receipt.dao.ts:55:40\n\n  52   req.body.amount = four_wheeler_rate * time_diff;\n  53 }\n  54 \n→ 55 const data = await prisma.receipts.create({\n       data: {\n         vehicle_type: \"four_wheeler\",\n         amount: 200,\n         type_parking_space: \"Organized\",\n         incharge_id: \"INC83049088\",\n         date: new Date(\"2024-06-14T10:52:08.745Z\"),\n         area_id: 1,\n         in_time: \"13:00\",\n         out_time: \"14:10\",\n         receipt_no: \"PK012262\",\n     +   vehicle_no: String\n       }\n     })\n\nArgument `vehicle_no` is missing.","meta-data":{"action":"POST","apiId":"0501","version":"1.0"},"status":false}}
{"apiId":"0501","date":"2024-06-14T10:56:08.905Z","level":"error","message":"\nInvalid `prisma.receipts.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\receipt\\receipt.dao.ts:55:40\n\n  52   req.body.amount = four_wheeler_rate * time_diff;\n  53 }\n  54 \n→ 55 const data = await prisma.receipts.create({\n       data: {\n         vehicle_type: \"four_wheeler\",\n         amount: 200,\n         type_parking_space: \"Organized\",\n         incharge_id: \"INC83049088\",\n         date: new Date(\"2024-06-14T10:56:08.862Z\"),\n         area_id: 1,\n         in_time: \"13:00\",\n         out_time: \"14:10\",\n         receipt_no: \"PKf2ffe2\",\n     +   vehicle_no: String\n       }\n     })\n\nArgument `vehicle_no` is missing."}
{"apiId":"0501","date":"2024-06-14T11:00:45.672Z","level":"error","message":"\nInvalid `prisma.receipts.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\receipt\\receipt.dao.ts:55:40\n\n  52   req.body.amount = four_wheeler_rate * time_diff;\n  53 }\n  54 \n→ 55 const data = await prisma.receipts.create({\n       data: {\n         vehicle_type: \"four_wheeler\",\n         amount: 200,\n         type_parking_space: \"Organized\",\n         incharge_id: \"INC83049088\",\n         date: new Date(\"2024-06-14T11:00:45.613Z\"),\n         area_id: 1,\n         in_time: \"13:00\",\n         out_time: \"14:10\",\n         receipt_no: \"PKb3f1bd\",\n     +   vehicle_no: String\n       }\n     })\n\nArgument `vehicle_no` is missing."}
{"apiId":"0501","date":"2024-06-14T11:02:47.116Z","level":"error","message":"\nInvalid `prisma.receipts.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\receipt\\receipt.dao.ts:55:40\n\n  52   req.body.amount = four_wheeler_rate * time_diff;\n  53 }\n  54 \n→ 55 const data = await prisma.receipts.create({\n       data: {\n         vehicle_type: \"four_wheeler\",\n         amount: 200,\n         type_parking_space: \"Organized\",\n         incharge_id: \"INC83049088\",\n         date: new Date(\"2024-06-14T11:02:46.975Z\"),\n         area_id: 1,\n         in_time: \"13:00\",\n         out_time: \"14:10\",\n         receipt_no: \"PK4df8f0\",\n     +   vehicle_no: String\n       }\n     })\n\nArgument `vehicle_no` is missing."}
{"apiId":"0306","date":"2024-06-14T11:13:43.424Z","level":"error","message":"\nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column \"bus_id\" does not exist`"}
{"apiId":"0306","date":"2024-06-14T11:14:01.591Z","level":"error","message":"\nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column \"bus_id\" does not exist`"}
{"apiId":"0306","date":"2024-06-14T11:19:04.231Z","level":"error","message":"\nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column \"area_id\" does not exist`"}
{"apiId":"0306","date":"2024-06-14T11:19:11.449Z","level":"error","message":"\nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column \"area_id\" does not exist`"}
{"apiId":"0306","date":"2024-06-14T11:19:19.076Z","level":"error","message":"\nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column \"date\" does not exist`"}
{"apiId":"0306","date":"2024-06-14T11:19:19.308Z","level":"error","message":"\nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column \"date\" does not exist`"}
{"apiId":"0306","date":"2024-06-14T11:19:19.572Z","level":"error","message":"\nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column \"date\" does not exist`"}
{"apiId":"0306","date":"2024-06-14T11:19:23.958Z","level":"error","message":"\nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column \"date\" does not exist`"}
{"apiId":"0306","date":"2024-06-14T11:21:32.590Z","level":"error","message":"\nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: \"undefined\"`"}
{"apiId":"0306","date":"2024-06-14T11:22:45.606Z","level":"error","message":"\nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: \"undefined\"`"}
{"apiId":"0306","date":"2024-06-14T11:23:06.241Z","level":"error","message":"\nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: \"undefined\"`"}
{"apiId":"0306","date":"2024-06-14T11:23:41.324Z","level":"error","message":"\nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: \"undefined\"`"}
{"apiId":"0306","date":"2024-06-14T11:28:26.002Z","level":"error","message":"\nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column scheduler.area_id does not exist`"}
{"apiId":"0201","date":"2024-06-14T11:32:20.173Z","level":"error","message":"\nInvalid `prisma.parking_area.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\onBoardParkingArea\\onboardParkingArea.ts:48:44\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.parking_area.create({\n       data: {\n         zip_code: undefined,\n         station: undefined,\n         landmark: undefined,\n         two_wheeler_capacity: NaN,\n         four_wheeler_capacity: NaN,\n         total_parking_area: NaN,\n         type_parking_space: \"UnOrganized\",\n         agreement_doc: undefined,\n         two_wheeler_rate: NaN,\n         four_wheeler_rate: NaN,\n     +   address: String\n       }\n     })\n\nArgument `address` is missing."}
{"apiId":"0201","date":"2024-06-14T11:32:34.101Z","level":"error","message":"\nInvalid `prisma.parking_area.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\onBoardParkingArea\\onboardParkingArea.ts:48:44\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.parking_area.create({\n       data: {\n         zip_code: undefined,\n         station: undefined,\n         landmark: undefined,\n         two_wheeler_capacity: NaN,\n         four_wheeler_capacity: NaN,\n         total_parking_area: NaN,\n         type_parking_space: \"UnOrganized\",\n         agreement_doc: undefined,\n         two_wheeler_rate: NaN,\n         four_wheeler_rate: NaN,\n     +   address: String\n       }\n     })\n\nArgument `address` is missing."}
{"apiId":"0201","date":"2024-06-14T11:32:35.844Z","level":"error","message":"\nInvalid `prisma.parking_area.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\onBoardParkingArea\\onboardParkingArea.ts:48:44\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.parking_area.create({\n       data: {\n         zip_code: undefined,\n         station: undefined,\n         landmark: undefined,\n         two_wheeler_capacity: NaN,\n         four_wheeler_capacity: NaN,\n         total_parking_area: NaN,\n         type_parking_space: \"UnOrganized\",\n         agreement_doc: undefined,\n         two_wheeler_rate: NaN,\n         four_wheeler_rate: NaN,\n     +   address: String\n       }\n     })\n\nArgument `address` is missing."}
{"apiId":"0201","date":"2024-06-14T11:32:42.539Z","level":"error","message":"\nInvalid `prisma.parking_area.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\onBoardParkingArea\\onboardParkingArea.ts:48:44\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.parking_area.create({\n       data: {\n         zip_code: undefined,\n         station: undefined,\n         landmark: undefined,\n         two_wheeler_capacity: NaN,\n         four_wheeler_capacity: NaN,\n         total_parking_area: NaN,\n         type_parking_space: \"UnOrganized\",\n         agreement_doc: undefined,\n         two_wheeler_rate: NaN,\n         four_wheeler_rate: NaN,\n     +   address: String\n       }\n     })\n\nArgument `address` is missing."}
{"apiId":"0201","date":"2024-06-14T11:32:52.110Z","level":"error","message":"\nInvalid `prisma.parking_area.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\onBoardParkingArea\\onboardParkingArea.ts:48:44\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.parking_area.create({\n       data: {\n         zip_code: undefined,\n         station: undefined,\n         landmark: undefined,\n         two_wheeler_capacity: NaN,\n         four_wheeler_capacity: NaN,\n         total_parking_area: NaN,\n         type_parking_space: \"UnOrganized\",\n         agreement_doc: undefined,\n         two_wheeler_rate: NaN,\n         four_wheeler_rate: NaN,\n     +   address: String\n       }\n     })\n\nArgument `address` is missing."}
{"apiId":"0201","date":"2024-06-14T11:33:00.142Z","level":"error","message":"\nInvalid `prisma.parking_area.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\onBoardParkingArea\\onboardParkingArea.ts:48:44\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.parking_area.create({\n       data: {\n         zip_code: undefined,\n         station: undefined,\n         landmark: undefined,\n         two_wheeler_capacity: NaN,\n         four_wheeler_capacity: NaN,\n         total_parking_area: NaN,\n         type_parking_space: \"UnOrganized\",\n         agreement_doc: undefined,\n         two_wheeler_rate: NaN,\n         four_wheeler_rate: NaN,\n     +   address: String\n       }\n     })\n\nArgument `address` is missing."}
{"apiId":"0201","date":"2024-06-14T11:33:01.851Z","level":"error","message":"\nInvalid `prisma.parking_area.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\onBoardParkingArea\\onboardParkingArea.ts:48:44\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.parking_area.create({\n       data: {\n         zip_code: undefined,\n         station: undefined,\n         landmark: undefined,\n         two_wheeler_capacity: NaN,\n         four_wheeler_capacity: NaN,\n         total_parking_area: NaN,\n         type_parking_space: \"UnOrganized\",\n         agreement_doc: undefined,\n         two_wheeler_rate: NaN,\n         four_wheeler_rate: NaN,\n     +   address: String\n       }\n     })\n\nArgument `address` is missing."}
{"apiId":"0201","date":"2024-06-14T11:33:08.719Z","level":"error","message":"\nInvalid `prisma.parking_area.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\onBoardParkingArea\\onboardParkingArea.ts:48:44\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.parking_area.create({\n       data: {\n         zip_code: undefined,\n         station: undefined,\n         landmark: undefined,\n         two_wheeler_capacity: NaN,\n         four_wheeler_capacity: NaN,\n         total_parking_area: NaN,\n         type_parking_space: \"UnOrganized\",\n         agreement_doc: undefined,\n         two_wheeler_rate: NaN,\n         four_wheeler_rate: NaN,\n     +   address: String\n       }\n     })\n\nArgument `address` is missing."}
{"apiId":"0201","date":"2024-06-14T11:33:11.160Z","level":"error","message":"\nInvalid `prisma.parking_area.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\onBoardParkingArea\\onboardParkingArea.ts:48:44\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.parking_area.create({\n       data: {\n         zip_code: undefined,\n         station: undefined,\n         landmark: undefined,\n         two_wheeler_capacity: NaN,\n         four_wheeler_capacity: NaN,\n         total_parking_area: NaN,\n         type_parking_space: \"UnOrganized\",\n         agreement_doc: undefined,\n         two_wheeler_rate: NaN,\n         four_wheeler_rate: NaN,\n     +   address: String\n       }\n     })\n\nArgument `address` is missing."}
{"apiId":"0201","date":"2024-06-14T11:33:29.013Z","level":"error","message":"\nInvalid `prisma.parking_area.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\onBoardParkingArea\\onboardParkingArea.ts:48:44\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.parking_area.create({\n       data: {\n         zip_code: undefined,\n         station: undefined,\n         landmark: undefined,\n         two_wheeler_capacity: NaN,\n         four_wheeler_capacity: NaN,\n         total_parking_area: NaN,\n         type_parking_space: \"UnOrganized\",\n         agreement_doc: undefined,\n         two_wheeler_rate: NaN,\n         four_wheeler_rate: NaN,\n     +   address: String\n       }\n     })\n\nArgument `address` is missing."}
{"apiId":"0201","date":"2024-06-14T11:33:34.125Z","level":"error","message":"\nInvalid `prisma.parking_area.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\onBoardParkingArea\\onboardParkingArea.ts:48:44\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.parking_area.create({\n       data: {\n         zip_code: undefined,\n         station: undefined,\n         landmark: undefined,\n         two_wheeler_capacity: NaN,\n         four_wheeler_capacity: NaN,\n         total_parking_area: NaN,\n         type_parking_space: \"UnOrganized\",\n         agreement_doc: undefined,\n         two_wheeler_rate: NaN,\n         four_wheeler_rate: NaN,\n     +   address: String\n       }\n     })\n\nArgument `address` is missing."}
{"apiId":"0201","date":"2024-06-14T11:34:07.325Z","level":"error","message":"\nInvalid `prisma.parking_area.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\onBoardParkingArea\\onboardParkingArea.ts:48:44\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.parking_area.create({\n       data: {\n         zip_code: undefined,\n         station: undefined,\n         landmark: undefined,\n         two_wheeler_capacity: NaN,\n         four_wheeler_capacity: NaN,\n         total_parking_area: NaN,\n         type_parking_space: \"UnOrganized\",\n         agreement_doc: undefined,\n         two_wheeler_rate: NaN,\n         four_wheeler_rate: NaN,\n     +   address: String\n       }\n     })\n\nArgument `address` is missing."}
{"apiId":"0201","date":"2024-06-14T11:34:07.627Z","level":"error","message":"\nInvalid `prisma.parking_area.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\onBoardParkingArea\\onboardParkingArea.ts:48:44\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.parking_area.create({\n       data: {\n         zip_code: undefined,\n         station: undefined,\n         landmark: undefined,\n         two_wheeler_capacity: NaN,\n         four_wheeler_capacity: NaN,\n         total_parking_area: NaN,\n         type_parking_space: \"UnOrganized\",\n         agreement_doc: undefined,\n         two_wheeler_rate: NaN,\n         four_wheeler_rate: NaN,\n     +   address: String\n       }\n     })\n\nArgument `address` is missing."}
{"apiId":"0201","date":"2024-06-14T11:34:32.497Z","level":"error","message":"\nInvalid `prisma.parking_area.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\onBoardParkingArea\\onboardParkingArea.ts:48:44\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.parking_area.create({\n       data: {\n         zip_code: undefined,\n         station: undefined,\n         landmark: undefined,\n         two_wheeler_capacity: NaN,\n         four_wheeler_capacity: NaN,\n         total_parking_area: NaN,\n         type_parking_space: \"UnOrganized\",\n         agreement_doc: undefined,\n         two_wheeler_rate: NaN,\n         four_wheeler_rate: NaN,\n     +   address: String\n       }\n     })\n\nArgument `address` is missing."}
{"apiId":"0201","date":"2024-06-14T11:34:33.335Z","level":"error","message":"\nInvalid `prisma.parking_area.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\onBoardParkingArea\\onboardParkingArea.ts:48:44\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.parking_area.create({\n       data: {\n         zip_code: undefined,\n         station: undefined,\n         landmark: undefined,\n         two_wheeler_capacity: NaN,\n         four_wheeler_capacity: NaN,\n         total_parking_area: NaN,\n         type_parking_space: \"UnOrganized\",\n         agreement_doc: undefined,\n         two_wheeler_rate: NaN,\n         four_wheeler_rate: NaN,\n     +   address: String\n       }\n     })\n\nArgument `address` is missing."}
{"apiId":"0201","date":"2024-06-14T11:34:53.166Z","level":"error","message":"\nInvalid `prisma.parking_area.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\onBoardParkingArea\\onboardParkingArea.ts:48:44\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.parking_area.create({\n       data: {\n         zip_code: undefined,\n         station: undefined,\n         landmark: undefined,\n         two_wheeler_capacity: NaN,\n         four_wheeler_capacity: NaN,\n         total_parking_area: NaN,\n         type_parking_space: \"UnOrganized\",\n         agreement_doc: undefined,\n         two_wheeler_rate: NaN,\n         four_wheeler_rate: NaN,\n     +   address: String\n       }\n     })\n\nArgument `address` is missing."}
{"apiId":"0201","date":"2024-06-14T11:34:54.137Z","level":"error","message":"\nInvalid `prisma.parking_area.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\onBoardParkingArea\\onboardParkingArea.ts:48:44\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.parking_area.create({\n       data: {\n         zip_code: undefined,\n         station: undefined,\n         landmark: undefined,\n         two_wheeler_capacity: NaN,\n         four_wheeler_capacity: NaN,\n         total_parking_area: NaN,\n         type_parking_space: \"UnOrganized\",\n         agreement_doc: undefined,\n         two_wheeler_rate: NaN,\n         four_wheeler_rate: NaN,\n     +   address: String\n       }\n     })\n\nArgument `address` is missing."}
{"apiId":"0501","date":"2024-06-14T11:51:53.009Z","level":"error","message":"\nInvalid `prisma.receipts.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\receipt\\receipt.dao.ts:55:40\n\n  52   req.body.amount = four_wheeler_rate * time_diff;\n  53 }\n  54 \n→ 55 const data = await prisma.receipts.create(\nForeign key constraint failed on the field: `receipts_incharge_id_fkey (index)`"}
{"apiId":"0504","date":"2024-06-14T12:21:57.026Z","level":"error","message":"\nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42803`. Message: `ERROR: column \"pi.id\" must appear in the GROUP BY clause or be used in an aggregate function`"}
{"apiId":"0504","date":"2024-06-14T12:22:36.129Z","level":"error","message":"\nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42803`. Message: `ERROR: column \"pi.id\" must appear in the GROUP BY clause or be used in an aggregate function`"}
{"apiId":"0504","date":"2024-06-14T12:22:48.299Z","level":"error","message":"\nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42803`. Message: `ERROR: column \"pi.id\" must appear in the GROUP BY clause or be used in an aggregate function`"}
{"apiId":"0504","date":"2024-06-14T12:34:21.566Z","level":"error","message":"\nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"Select\"`"}
{"apiId":"0501","date":"2024-06-14T12:47:24.269Z","level":"error","message":"\nInvalid `prisma.receipts.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\receipt\\receipt.dao.ts:59:40\n\n  56 \n  57 type_parking_space === 0;\n  58 \n→ 59 const data = await prisma.receipts.create({\n       data: {\n         vehicle_no: \"51654894\",\n         vehicle_type: \"four_wheeler\",\n         amount: \"10\",\n                 ~~~~\n         type_parking_space: \"UnOrganized\",\n         incharge_id: \"INC83049088\",\n         date: new Date(\"2024-06-14T12:47:22.290Z\"),\n         area_id: 1,\n         in_time: \"03:30\",\n         out_time: \"11:15\",\n         receipt_no: \"PK39a276\"\n       }\n     })\n\nArgument `amount`: Invalid value provided. Expected Int, provided String."}
{"apiId":"0501","date":"2024-06-14T13:09:10.649Z","level":"error","message":"\nInvalid `prisma.receipts.create()` invocation in\nW:\\Juidco all backup\\JuidcParking\\Backend\\src\\component\\juidcoPTMS\\dao\\receipt\\receipt.dao.ts:59:40\n\n  56 \n  57 type_parking_space === 0;\n  58 \n→ 59 const data = await prisma.receipts.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: ToSql(5), cause: Some(Error { kind: ConversionError(\"Unable to fit integer value '1500000000000' into an INT4 (32-bit signed integer).\"), original_code: None, original_message: None }) }), transient: false })"}
